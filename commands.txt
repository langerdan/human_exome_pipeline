# human exome pipeline
# reference genome has already been indexed
# software: FastQC, BWA, samtools, GATK, Qualimap, picardtools
# fastq files have been checked with fastqc
# for paired end reads
# ref = reference (.fasta) (from GATK resource bundle)
# read1 = read1 of pair
# read2 = read2 of 
# sample = combined alignments
# all "known" databases (e.g. hap map, Mills&1000G, etc are in GATK resource bundle)

#align reads to reference genome

# using bwa
./bwa aln $ref  $read1 > $read1.sai
./bwa aln $ref  $read2 > $read2.sai

# read group is dependent on sampleID, platform, lane.
./bwa sampe -r "@RG\tID:sampleID\tSM:sampleID\tLB:ga\tPL:Illumina" $read1.sai $read2.sai $read1.fastq $read2.fastq > sample.sam

# using samtools

./samtools view -bS sample.sam > sample.bam

./samtools sort sample.bam  sample.sorted.bam

./samtools index sample.sorted.bam sample.sorted.bam.bai

# this will give you some alignment stats for where you are in the pipeline
./samtools flagstat sample.sorted.bam.bam > sample.sorted.bam.alignmentstat.txt

# run Qualimap using sorted bam files, provide reference exome (which can be created in UCSC table browser) - otherwise stats will be calculated using entire genome.

# using GATK
# local realignment around indels - step 1 creates the target intervals based on known indels and called genotypes, step 2 does the realignment.

java -Xmx4g -jar GenomeAnalysisTK.jar -T RealignerTargetCreator -nt 4 -R ref -o sample.output.intervals -I sample.sorted.bam -L UCSC_exome.bed -known Mills_and_1000G_gold_standard.indels.b37.vcf -known 1000G_phase1.indels.b37.vcf 

java -Xmx8g -Djava.io.tmpdir=/Volumes/Passport/temp -jar GenomeAnalysisTK.jar  -I sample.sorted.bam -R ref -T IndelRealigner -targetIntervals sample.output.intervals -o sample.realigned.bam -known 1000G_phase1.indels.b37.vcf -known Mills_and_1000G_gold_standard.indels.b37.vcf

# using picardtools
# step1 fixes mate pairs, step2 marks duplicates  
# create temp directory

java -Xmx8g -Djava.io.tmpdir=temp -jar FixMateInformation.jar INPUT=sample.realigned.bam OUTPUT=sample.realigned.fixed.bam SORT_ORDER=coordinate VALIDATION_STRINGENCY=SILENT

java -Xmx8g -jar MarkDuplicates.jar INPUT=sample.realigned.fixed.bam OUTPUT=sample.realigned.fixed.dedup.bam METRICS_FILE=sample.DudupMetricsFile VALIDATION_STRINGENCY=SILENT

#BASE QUALITY RECALIBRATION
#back to samtools

./samtools index sample.realigned.fixed.dedup.bam

#back to GATK

#generate quality recalibration table
java -Xmx8g -jar GenomeAnalysisTK.jar -T BaseRecalibrator -nct 4 -I sample.realigned.fixed.dedup.bam -R ref -knownSites 1000G_phase1.indels.b37.vcf -knownSites Mills_and_1000G_gold_standard.indels.b37.vcf -knownSites dbsnp_137.b37.vcf -o sample.recal_data.grp

#create new recalibrated bam file
java -Xmx8g -jar GenomeAnalysisTK.jar -T PrintReads -R ref -I sample.realigned.fixed.dedup.bam -BQSR sample.recal_data.grp -o sample.realigned.fixed.dedup.recal.bam

#call variants!
java -Xmx8g -jar GenomeAnalysisTK.jar  -R ref -T UnifiedGenotyper -nt 4 -I sample.realigned.fixed.dedup.recal.bam --dbsnp dbsnp_137.b37.vcf -o sample.INDELS.SNPS.SVS.RAW.vcf --genotype_likelihoods_model BOTH -stand_call_conf 50.0 -stand_emit_conf 10.0 -dcov 200 -L UCSC_exome.bed

#Variant recalibration 
#first do SNPs
java -Xmx8g -jar GenomeAnalysisTK.jar -T VariantRecalibrator -R ref -input sample.INDELS.SNPS.SVS.RAW.vcf  -resource:hapmap,known=false,training=true,truth=true,prior=15.0 hapmap_3.3.b37.vcf -resource:omni,known=false,training=true,truth=false,prior=12.0 1000G_omni2.5.b37.vcf -resource:dbsnp,known=true,training=false,truth=false,prior=6.0 dbsnp_137.b37.vcf -an QD -an HaplotypeScore -an MQRankSum -an ReadPosRankSum -an FS -an MQ -mode SNP --maxGaussians 4 --percentBadVariants 0.05 -recalFile sample.SNVs.recal -tranchesFile sample.SNVs.tranches -rscriptFile sample.snv.plots.R 

java -Xmx8g -jar GenomeAnalysisTK.jar -T ApplyRecalibration -R ref -input sample.INDELS.SNPS.SVS.RAW.vcf --ts_filter_level 99.0 -tranchesFile sample.SNVs.tranches -recalFile sample.SNVs.recal -mode SNP -o sample.INDELS.SNPS.SVS.RAW.SNVS_Recalibrated.vcf

#now do INDELs (file names are getting long)
java -Xmx8g -jar GenomeAnalysisTK.jar -T VariantRecalibrator -R ref -input sample.INDELS.SNPS.SVS.RAW.SNVS_Recalibrated.vcf -resource:mills,known=true,training=true,truth=true,prior=12.0 Mills_and_1000G_gold_standard.indels.b37.vcf -an QD -an FS -an HaplotypeScore -an ReadPosRankSum -mode INDEL --maxGaussians 3 --stdThreshold 10.0 --percentBadVariants 0.12 --minNumBadVariants 200 -recalFile sample.indels.recal -tranchesFile sample.indels.tranches -rscriptFile sample.INDELS.plots.R

java -Xmx8g -jar GenomeAnalysisTK.jar -T ApplyRecalibration -R ref -input sample.INDELS.SNPS.SVS.RAW.SNVS_Recalibrated.vcf --ts_filter_level 95.0 -tranchesFile sample.indels.tranches -recalFile sample.indels.recal -mode INDEL -o sample.INDELS.SNPS.SVS.RAW.SNVS_INDELS_Recalibrated.vcf

#hard filtering
java -Xmx8g -jar GenomeAnalysisTK.jar -T VariantFiltration -R ref --variant sample.INDELS.SNPS.SVS.RAW.SNVS_INDELS_Recalibrated.vcf -o sample.final.BASICFILTER.vcf --clusterWindowSize 10 --filterExpression "MQ0 >= 4 && ((MQ0 / (1.0 * DP)) > 0.1)" --filterName "HARD_TO_VALIDATE" --filterExpression "QD < 2.0 || MQ < 40.0 || FS > 60.0 || HaplotypeScore > 13.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0" --filterName "GATKStandard_SNVS" --filterExpression "QD < 2.0 || FS > 200.0 || ReadPosRankSum < -20.0" --filterName "GATKStandard_INDELS"

#now annotate with your favorite annotator (snpEff, Annovar, etc.)
